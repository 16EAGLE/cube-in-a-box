AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'Open Data Cube template with EC2 instance and RDS.'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues: [
      t2.small, t2.medium, t2.large,
      m1.large, m1.xlarge, m2.xlarge,
      c4.large, c4.xlarge, c4.2xlarge,
      g2.8xlarge, r3.large, r3.xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  ExtentToIndex:
    Description: An extent to index within the cube in this box.
    Type: String
    Default: '[1.1919, 1.4509, 6.0809, 6.2218]'
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: 'ami-08e0276a'
      IamInstanceProfile: 'aws-landsat-access'
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            -
              - "#!/bin/bash -ex"
              - "\n"
              - "apt-get update && apt-get -y install python-pip \n"
              - "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz \n"
              - "cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup \n"
              - "chmod +x /etc/init.d/cfn-hup \n"
              - "update-rc.d cfn-hup defaults \n "
              - "service cfn-hup start \n"
              - "\n"
              - "/usr/local/bin/cfn-init --stack "
              - Ref: AWS::StackId
              - " --resource EC2Instance --region "
              - Ref: AWS::Region
              - "\n"
              - "echo \"This is a test\" >> /tmp/test.txt"
              - "\n"
      Tags:
        - Key:   "Name"
          Value: "OpenDataCube Test"
    Metadata:
      # see http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html
      AWS::CloudFormation::Init:
        config:
          files:
            /home/ubuntu/install-software:
              content: |
                #!/bin/bash -eu
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
                add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                apt-get update
                apt-get install -y docker-ce python3-pip unzip wget
                pip3 install docker-compose

              mode: '000700'
              owner: ubuntu
              group: ubuntu

            /home/ubuntu/get-repo:
              content: |
                #!/bin/bash -eu
                apt-get install
                wget https://github.com/alexgleith/docker-opendatacube/archive/master.zip -O /tmp/archive.zip
                unzip /tmp/archive.zip
                mv docker-opendatacube-master /opt/odc-test

              mode: '000700'
              owner: ubuntu
              group: ubuntu


            /home/ubuntu/index-config:
              content:
                "extent":
                  "Ref" : "ExtentToIndex"
              mode: '000700'
              owner: ubuntu
              group: ubuntu

          commands:
            01-setup-opendatacube:
              command: |
                sh /home/ubuntu/install-software
                sh /home/ubuntu/get-repo
            02-run-opendatacube:
              command: |
                sudo docker-compose -f /opt/odc-test/docker-compose.yml pull
                sudo docker-compose -f /opt/odc-test/docker-compose.yml up -d
                sudo docker-compose exec /opt/odc-test/opendatacube datacube -v system init
            03-index-AWSLS8:
              command: |
                sudo docker-compose exec sh /opt/odc-test/opendatacube/data_scripts/load-LS8.sh
                sudo docker-compose exec sh /opt/odc-test/opendatacube/notebooks/aws_ls8_bucket.py landsat-pds L8/001/003/

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: '8888'
        ToPort: '8888'
        CidrIp: !Ref 'SSHLocation'
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
